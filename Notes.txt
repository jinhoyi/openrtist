Benchmark for simple streaming version
(zeroMQ request-reply streaming from Flex to Gabrial, raw frame buffer)
For Screen scaled to Height = 640

pre = serial zeroMQ calls, infer = cv2 image compression to jpeg
Big_screen:
pre 6.8, infer 5.7, post 12.9 ms
Small_screen:
pre 2.5, infer 4.7ms

After switching to BGR (from RGB whlie doing glReadPixel)
Big_screen:
pre 6.7, infer 5.8, post 12.9 ms
Small_screen:
pre 2.4, infer 3.6, post 7.8ms

After Compressing on Flex (pre = sening imu, infer = getting frame buffer)
Big_screen:
pre 0.1 ms, infer 4.4 ms, post 4.6 ms, wait 0.5 ms, fps 195.8
Small_screen:
pre 0.1 ms, infer 3.2 ms, post 3.4 ms, wait 2.6 ms, fps 166.50

For Screen scaled to Height = 960
Big_screen:
pre 0.0 ms, infer 7.4 ms, post 7.5 ms, wait 0.9 ms, fps 119.88
Small_screen:
pre 0.1 ms, infer 3.6 ms, post 3.7 ms, wait 0.6 ms, fps 233.73

Calling compressJpeg during updateFrame()
For Screen scaled to Height = 960
Big_screen:
pre 0.1 ms, infer 0.5 ms, post 0.7 ms, wait 8.1 ms, fps 113.31
Small_screen:



https://stackoverflow.com/questions/47181993/list-of-available-icons



docker C++
https://ddanilov.me/dockerized-cpp-build
https://medium.com/codex/a-practical-guide-to-containerize-your-c-application-with-docker-50abb197f6d4
https://hub.docker.com/r/nvidia/cuda/tags?page=1&name=12
https://github.com/NVIDIA/nvidia-docker#quickstart

https://developer.cisco.com/docs/iox/#!tutorialbuild-sample-docker-type-c-based-simple-app

https://www.youtube.com/watch?v=j28aUHbT_c4&ab_channel=BehnamAsadi


g++, gcc version switch
https://linuxconfig.org/how-to-switch-between-multiple-gcc-and-g-compiler-versions-on-ubuntu-20-04-lts-focal-fossa
https://askubuntu.com/questions/26498/how-to-choose-the-default-gcc-and-g-version



How to save the frame buffer and ten retrieve it back
https://stackoverflow.com/questions/873984/how-to-save-the-frame-buffer-and-then-retrieve-it-back

Remote OpenGL Setup without Display
https://gist.github.com/shehzan10/8d36c908af216573a1f0

/usr/bin/X :0 -config /path/to/your/xorg.conf &
env DISPLAY=:0 ./NvFlexDemoReleaseCUDA_x64

Terminate
pgrep -a X
kill <process_number>

OR 
https://kovyrin.net/2007/10/01/how-to-run-gui-programs-on-a-server-without-any-monitor/

OR
!!!EGL: Headless openGL (without X)
https://stackoverflow.com/questions/3326641/opengl-without-x-org-in-linux
https://developer.nvidia.com/blog/egl-eye-opengl-visualization-without-x-server/

https://registry.khronos.org/EGL/sdk/docs/man/




OpenGL threads
https://stackoverflow.com/questions/64484835/how-to-setup-one-shared-opengl-contexts-per-thread-with-sdl2

https://stackoverflow.com/questions/25676835/signal-handling-in-multi-threaded-python


download gcc7
https://askubuntu.com/questions/1406962/install-gcc7-on-ubuntu-22-04



DOCKER Calling
sudo docker run -it --rm --name=testenv --mount type=bind,source=${PWD}/../server,target=/test testenv/testenv_build:0.1
sudo docker build -t testenv/testenv_build:0.1 -f DockerfileBuildEnv .


cuda 9.2 
https://developer.nvidia.com/cuda-92-download-archive

append in command Line
echo "things to append" | tee -a path-to-file

Android release
https://stackoverflow.com/questions/66579530/error-the-apk-for-your-currently-selected-variant-unknown-output-is-not-signe
